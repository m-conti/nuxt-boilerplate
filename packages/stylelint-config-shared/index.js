/** @type {import('stylelint').Config} */
module.exports = {
  extends: [
    'stylelint-config-recommended',
    'stylelint-config-recommended-vue',
  ],
  env: {
    node: true,
  },
  rules: {
    'declaration-block-no-duplicate-custom-properties': true,
    'declaration-block-no-duplicate-properties': true,
    'font-family-no-duplicate-names': true,
    'keyframe-block-no-duplicate-selectors': true,
    'no-duplicate-at-import-rules': true,
    'no-duplicate-selectors': true,
    'block-no-empty': true,
    'alpha-value-notation': [
      'percentage',
      {
        exceptProperties: [
          'opacity',
          'fill-opacity',
          'flood-opacity',
          'stop-opacity',
          'stroke-opacity',
        ],
      },
    ],
    'color-no-invalid-hex': true,
    'function-calc-no-unspaced-operator': true,
    'keyframe-declaration-no-important': true,
    'media-query-no-invalid': true,
    'named-grid-areas-no-invalid': true,
    'no-invalid-double-slash-comments': true,
    'no-invalid-position-at-import-rule': true,
    'no-irregular-whitespace': true,
    'string-no-newline': true,
    'custom-property-no-missing-var-function': true,
    'font-family-no-missing-generic-family-keyword': true,
    'function-linear-gradient-no-nonstandard-direction': true,
    'selector-anb-no-unmatchable': true,
    'annotation-no-unknown': true,
    'function-no-unknown': true,
    'media-feature-name-no-unknown': true,
    'media-feature-name-value-no-unknown': true,
    'property-no-unknown': true,
    'selector-pseudo-element-no-unknown': true,
    'selector-type-no-unknown': [true, {
      ignoreTypes: [
        'swiper-container',
      ]
    }],
    'unit-no-unknown': true,
    'at-rule-no-vendor-prefix': true,
    'length-zero-no-unit': true,
    'property-no-vendor-prefix': true,
    'value-no-vendor-prefix': true,
    'value-keyword-case': true,
    'selector-type-case': true,
    'function-name-case': true,
    'declaration-property-unit-allowed-list': {
      'font-size': ['rem', 'px'],
      '/^animation/': ['s', 'ms'],
    },
    'selector-pseudo-class-no-unknown': [ true, {
      ignorePseudoClasses: [
        'deep',
      ]
    }],
    'at-rule-no-unknown': [ true, {
      ignoreAtRules: [
        'add-mixin',
        'define-mixin',
        'match'
      ]
    }],
    'declaration-property-value-no-unknown': [ true, { ignoreProperties: { transition: "/^translateZ/" }}],
    'at-rule-name-case': 'lower',
    'at-rule-name-space-after': 'always',
    'at-rule-no-vendor-prefix': true,
    'at-rule-semicolon-newline-after': 'always',
    'at-rule-semicolon-space-before': 'never',
    'block-closing-brace-newline-after': 'always',
    'block-closing-brace-newline-before': 'always-multi-line',
    'block-closing-brace-space-before': 'always-single-line',
    'block-opening-brace-newline-after': 'always-multi-line',
    'block-opening-brace-space-before': 'always',
    'block-opening-brace-space-after': 'always-single-line',
    'color-function-notation': 'legacy',
    'color-hex-length': 'short',
    'comment-empty-line-before': [ 'always', { except: ['first-nested'], ignore: ['stylelint-commands']}],
    'comment-whitespace-inside': 'always',
    'custom-property-empty-line-before': [
      'always',
      { except: [ 'after-custom-property', 'first-nested' ], ignore: [ 'after-comment', 'inside-single-line-block' ]},
    ],
    'custom-media-pattern': [
      '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
      { message: (name) => `Expected custom media query name "${name}" to be kebab-case` },
    ],
    'custom-property-pattern': [
      '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
      { message: (name) => `Expected custom property name "${name}" to be kebab-case` },
    ],
    'declaration-bang-space-after': 'never',
    'declaration-bang-space-before': 'always',
    'declaration-block-no-redundant-longhand-properties': true,
    'declaration-block-semicolon-newline-after': "always-multi-line",
    'declaration-block-single-line-max-declarations': 2,
    'declaration-colon-space-after': 'always-single-line',
    'declaration-colon-space-before': 'never',
    'font-family-name-quotes': 'always-where-recommended',
    'function-name-case': 'lower',
    'function-comma-space-after': 'always',
    'function-comma-space-before': 'never',
    'function-url-quotes': 'always',
    'hue-degree-notation': 'angle',
    'import-notation': 'url',
    'indentation': 2,
    'max-empty-lines': 2,
    'max-line-length': 140,
    'no-empty-first-line': true,
    'no-eol-whitespace': true,
    'no-extra-semicolons': true,
    'no-missing-end-of-source-newline': true,
    'unicode-bom': 'never',
    'linebreaks': 'unix',
    'keyframe-selector-notation': 'percentage-unless-within-keyword-only-block',
    'keyframes-name-pattern': [
      '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
      { message: (name) => `Expected keyframe name "${name}" to be kebab-case` },
    ],
    'length-zero-no-unit': [ true, { ignore: ['custom-properties']}],
    'media-feature-colon-space-after': 'always',
    'media-feature-colon-space-before': 'never',
    'media-feature-name-case': 'lower',
    'media-feature-parentheses-space-inside': 'never',
    'media-feature-range-operator-space-after': 'always',
    'media-feature-range-operator-space-before': 'always',
    'media-feature-name-no-vendor-prefix': true,
    'media-feature-range-notation': 'context',
    'media-query-list-comma-newline-after': 'always-multi-line',
    'media-query-list-comma-newline-before': 'never-multi-line',
    'media-query-list-comma-space-after': 'always-single-line',
    'media-query-list-comma-space-before': 'never',
    'number-max-precision': 4,
    'property-case': 'lower',
    'property-no-vendor-prefix': true,
    'rule-empty-line-before': [
      'always-multi-line',
      { except: ['first-nested'], ignore: ['after-comment']},
    ],
    'selector-attribute-quotes': 'always',
    'selector-class-pattern': [
      '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
      { message: (selector) => `Expected class selector "${selector}" to be kebab-case` },
    ],
    'selector-id-pattern': [
      '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
      { message: (selector) => `Expected id selector "${selector}" to be kebab-case` },
    ],
    'selector-list-comma-space-after': 'always-single-line',
    'selector-list-comma-space-before': 'never',
    'selector-no-vendor-prefix': true,
    'selector-not-notation': 'complex',
    'selector-pseudo-element-colon-notation': 'double',
    'selector-type-case': 'lower',
    'shorthand-property-no-redundant-values': true,
    'value-keyword-case': 'lower',
    'value-no-vendor-prefix': [
      true,
      {
        // `-webkit-box` is allowed as standard. See https://www.w3.org/TR/css-overflow-3/#webkit-line-clamp
        ignoreValues: ['box', 'inline-box'],
      },
    ],
  },
}
